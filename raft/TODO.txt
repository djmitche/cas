## Next

Remove from class repo, add to https://github.com/djmitche/rubbish/blob/master/src/prax

## Functionality

* Client request tracking and a usable pub API for RaftServer
  * Initial creation returns an id (node id + log index?)
  * API to return a stream of committed id's, beginning with a given id
  * RO operations, with options for consistency:
    - batched reads (leader waits for majority)
    - stale reads (no conditions)
    - "after" some other transaction (condition on another request id)
* Stable storage
* Log compaction
* Membership changes

## Doc

* doc deviations from paper
  * AppendEntriesRep contains info implicitly in the context of the RPC (next_index)

## Misc

* remove kv, transport
* candidate_id, leader fields in messages are redundant
* enable/disable debugging output with a feature flag

## Testing

* enhance LocalNetwork to lose packets, delay packets, kill servers, etc.,
  using a repeatable random seed

## server

* move tests to appropriate modules (e.g., handlers)
* write tests for other modules

## server::message

* Handle message ser/de *far* better
  - don't assume JSON
  - don't require serde??

## server::handlers

 * several more methods need tests (TODO: test)

## crate::net::tcp

* Expire outgoing messages if not sent in 500 ms or whatever
* Write messages while still monitoring for stopping
* use either net2 or nix, not both
* Figure out how to do a nonblocking connect with a socket from net2
* Make the wait state back off up to 1000ms or something
